static_resources:
  listeners:
    # 入站流量监听器 (处理发往本服务的请求)
    - name: inbound_listener
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 15006
      # 移除 transparent: true
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: inbound_http
                codec_type: AUTO
                route_config:
                  name: inbound_route
                  virtual_hosts:
                    - name: inbound
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: dict-app
                http_filters:
                  - name: envoy.filters.http.wasm
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      config:
                        name: "sp_agent_inbound"
                        vm_config:
                          vm_id: "sp_agent_inbound"
                          runtime: "envoy.wasm.runtime.v8"
                          allow_precompiled: true
                          code:
                            local:
                              filename: "/etc/envoy/sp_istio_agent.wasm"
                        configuration:
                          "@type": type.googleapis.com/google.protobuf.StringValue
                          value: |
                            {
                              "traffic_direction": "inbound",
                              "sp_backend_url": "http://host.docker.internal:8081",
                              "enable_inject": false,
                              "collectionRules": [
                                {
                                  "http": {
                                    "serverPath": "/test/1",
                                    "clientHost": "httpbin",
                                    "clientPaths": ["/delay/1"]
                                  }
                                },
                                {
                                  "http": {
                                    "serverPath": "/test/2",
                                    "clientHost": "httpbin",
                                    "clientPaths": ["/delay/1"]
                                  }
                                }
                              ]
                            }
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                      suppress_envoy_headers: false

    # 出站流量监听器 (处理本服务发起的请求)
    - name: outbound_listener
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 15001
      # 移除 transparent: true
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: outbound_http
                codec_type: AUTO
                route_config:
                  name: outbound_route
                  virtual_hosts:
                    - name: outbound
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: httpbin_cluster
                http_filters:
                  - name: envoy.filters.http.wasm
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      config:
                        name: "sp_agent_outbound"
                        vm_config:
                          vm_id: "sp_agent_outbound"
                          runtime: "envoy.wasm.runtime.v8"
                          allow_precompiled: true
                          code:
                            local:
                              filename: "/etc/envoy/sp_istio_agent.wasm"
                        configuration:
                          "@type": type.googleapis.com/google.protobuf.StringValue
                          value: |
                            {
                              "traffic_direction": "outbound",
                              "sp_backend_url": "http://host.docker.internal:8081",
                              "enable_inject": true,
                              "collectionRules": [
                                {
                                  "http": {
                                    "serverPath": "/test/1",
                                    "clientHost": "httpbin.org",
                                    "clientPaths": ["/delay/1"]
                                  }
                                },
                                {
                                  "http": {
                                    "serverPath": "/test/2",
                                    "clientHost": "httpbin.org",
                                    "clientPaths": ["/delay/1"]
                                  }
                                }
                              ]
                            }
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                      suppress_envoy_headers: false

  clusters:
    - name: dict-app
      type: STRICT_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: dict-app
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: dict-app  # 使用 docker-compose 服务名
                      port_value: 80

    - name: inbound_passthrough
      type: ORIGINAL_DST
      lb_policy: CLUSTER_PROVIDED
      connect_timeout: 10s

    - name: httpbin_cluster
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: httpbin_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: httpbin
                      port_value: 80

    - name: sp_backend
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: sp_backend
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: host.docker.internal
                      port_value: 8081

admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 18001
